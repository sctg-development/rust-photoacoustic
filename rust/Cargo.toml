[package]
name = "rust_photoacoustic"
version = "0.1.0"
edition = "2021"
authors = ["Ronan Le Meillat"]
description = "Water Vapor Analyzer using Laser Photoacoustic Spectroscopy"

[features]
default = ["python-driver"]
python-driver = ["pyo3", "pythonize"]
static = ["pyo3"]

[dependencies]
# System monitoring
sysinfo = "0.35.2"         # Cross-platform system information
futures = "0.3.31"         # Async utilities

# Audio processing
cpal = "0.16.0"           # Audio input
hound = "3.5.1"             # WAV file handling
include_dir = "0.7.4"       # Include files in the binary
rustfft = "6.4.0"           # Fast Fourier Transform
realfft = "3.5.0"          # Real-valued FFT optimized for audio
num-complex = "0.4.6"      # Complex number arithmetic
ndarray = "0.16.1"          # Numerical arrays
dasp_sample = "0.11.0"      # Digital signal processing
dasp_signal = "0.11.0"      # Signal processing
dasp_window = "0.11.1"      # Windowing functions
dasp_ring_buffer = "0.11.0" # Ring buffer for audio

# Command line interface
clap = { version = "4.5.40", features = ["derive"] }

# Web interface
rocket = { version = "0.5.1", features = ["json", "tls", "secrets"] }
rocket_cors = "0.6.0"

jsonwebtoken = "9.3.1" # For JWT auth

# Error handling and utilities
anyhow = "1.0.98"                                                                     # Error handling
thiserror = "2.0.12"                                                                     # Error definitions
log = "0.4.27"                                                                           # Logging
env_logger = "0.11.8"                                                                   # Logging implementation
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"                                                                    # JSON serialization
serde_yml = "0.0.12"                                                                  # YAML serialization
jsonschema = "0.30.0"                                                                   # JSON Schema validation
yaml-rust = "0.4.5"                                                                     # YAML parsing
base64 = "0.22.1"                                                                       # For encoding/decoding certificates
tempfile = "3.20.0"                                                                   # Temporary files for tests
chrono = { version = "0.4.41", features = ["serde"] }
rand = "0.9.1"
reqwest = { version = "0.12.20", features = ["json"] }
oxide-auth = { git = "https://github.com/197g/oxide-auth", branch = "master" }
oxide-auth-rocket = { git = "https://github.com/197g/oxide-auth", branch = "master" }
redis = { version = "0.32.2", features = ["tokio-comp", "aio", "tokio-rustls-comp"] }
rustls = { version = "0.23", features = ["ring", "aws_lc_rs"] }
rocket_okapi = { git = "https://github.com/sctg-development/okapi", features = [
    "rapidoc",
    "swagger",
] } # Automatic OpenAPI generation at build time 
serde_urlencoded = "0.7.1"
url = "2.5.4"                                                                           # URL parsing
rcgen = "0.13.2"                                                                        # Certificate generation
time = "0.3.41"                                                                          # Time handling for certificates
rsa = {version = "0.9.8", features=["pem","sha2"]}
tokio = { version = "1.45.1", features = ["rt", "macros", "rt-multi-thread", "time"] }
tokio-modbus = { version = "0.16.1", features = ["tcp", "tcp-server", "server"] }
pwhash = "1.0.0"  # Add this dependency for password hashing
handlebars = "6.3.2"
quote = "1.0.40"
syn = {version="2.0.102", features=["full"]}
auth-macros = { path = "auth-macros" }
rocket_async_compression = "0.6.1"
async-trait = "0.1.88"
uuid = { version = "1.17.0", features = ["v4"] }
schemars = "0.8"
evalexpr = "12.0.2"

# Python integration (optional)
pyo3 = { version = "0.20", optional = true, features = ["auto-initialize"], default-features = false }
pythonize = { version = "0.20", optional = true }
sci-rs = "0.4.1"

[target.'cfg(not(feature = "static"))'.dependencies]
# Empty section - uses the default pyo3 config above

[target.'cfg(feature = "static")'.dependencies]
pyo3 = { version = "0.20", optional = true, default-features = false }

[target.'cfg(target_os = "linux")'.dependencies]
rdkafka = { version = "0.37.0", features = ["tokio"] }

[target.'cfg(any(target_os = "macos", target_os = "windows"))'.dependencies]
rdkafka = { version = "0.37.0", features = ["cmake-build", "tokio"] }

[dev-dependencies]
criterion = "0.6.0"                                   # Benchmarking
mockall = "0.13.1"                                    # Mocking for tests
oauth2 = "5.0.0"                                    # OAuth2 client implementation
wiremock = "0.6.4"                                  # HTTP mocking
tokio = { version = "1.45.1", features = ["full"] }
reqwest = { version = "0.12.18", features = ["json"] }
uuid = { version = "1.17.0", features = ["v4"] }
url = "2.5.4"                                         # URL parsing
sha2 = "0.10.9"                                       # Pour le hachage SHA-256 utilisé dans PKCE
base64 = "0.22.1"                                     # Pour l'encodage Base64URL utilisé dans PKCE
serde_json = "1.0.140"                                  # Pour analyser la réponse JSON des tokens
regex = "1.11.1"                                    # Expressions régulières
evalexpr = "12.0.2"                                 # Mathematical expression evaluation
approx = "0.5.1"                                    # Approximate floating-point equality for tests

[build-dependencies]
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"                                 # JSON serialization
tokio = { version = "1.45.1", features = ["full"] }
rcgen = "0.13.2"                                     # Certificate generation
time = "0.3.41"                                       # Time handling for certificates
anyhow = "1.0.98"                                  # Error handling
rsa = "0.9.8"
chrono = { version = "0.4.41", features = ["serde"] } # For build timestamps
cargo_metadata = "0.20.0"
sha2 = "0.10.9" 

[patch."https://github.com/197g/oxide-auth"]
oxide-auth-rocket = { path = "./oxide-auth-patched/oxide-auth-rocket" }
oxide-auth = { path = "./oxide-auth-patched/oxide-auth" }

[patch."https://github.com/sctg-development/okapi"]
okapi = { path = "./okapi-patched/okapi"}
rocket_okapi = { path = "./okapi-patched/rocket-okapi"}
rocket_okapi_codegen = { path = "./okapi-patched/rocket-okapi-codegen"}

[profile.release]
strip = true

[[bin]]
name = "pid_tuner"
path = "src/bin/pid_tuner.rs"

[lints.rust]
unused_variables = "allow"
dead_code = "allow"
unused_imports = "allow"
deprecated = "allow"
