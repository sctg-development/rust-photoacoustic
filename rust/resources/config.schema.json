{
  "$schema": "http://json-schema.org/draft-2020-12/schema",
  "type": "object",
  "properties": {
    "visualization": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65534
        },
        "address": {
          "type": "string",
          "anyOf": [
            {
              "format": "ipv4"
            },
            {
              "format": "ipv6"
            }
          ],
          "description": "IPv4 or IPv6 address to bind the visualization service to."
        },
        "name": {
          "type": "string"
        },
        "cert": {
          "type": [
            "string",
            "null"
          ],
          "description": "PEM TLS certificate file (base64 encoded)"
        },
        "key": {
          "type": [
            "string",
            "null"
          ],
          "description": "PEM TLS private key file (base64 encoded)"
        },
        "hmac_secret": {
          "type": "string",
          "description": "HMAC secret for JWT token signing"
        },
        "rs256_private_key": {
          "type": [
            "string",
            "null"
          ],
          "description": "RS256 private key for JWT token signing (base64 encoded)"
        },
        "rs256_public_key": {
          "type": [
            "string",
            "null"
          ],
          "description": "RS256 public key for JWT token verification (base64 encoded)"
        },
        "session_secret": {
          "type": [
            "string"
          ],
          "description": "Session secret for cookie signing (base64 encoded) can be generated with openssl rand -base64 32"
        }
      },
      "required": [
        "port",
        "address",
        "name",
        "hmac_secret",
        "rs256_private_key",
        "rs256_public_key",
        "session_secret"
      ]
    },
    "modbus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65534
        },
        "address": {
          "type": "string",
          "anyOf": [
            {
              "format": "ipv4"
            },
            {
              "format": "ipv6"
            }
          ],
          "description": "IPv4 or IPv6 address to bind the Modbus service to."
        },
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable Modbus TCP server"
        }
      },
      "required": [
        "port",
        "address"
      ]
    },
    "acquisition": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable data acquisition"
        },
        "interval_ms": {
          "type": "integer",
          "minimum": 10,
          "default": 1000,
          "description": "Data acquisition interval in milliseconds"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "photoacoustic": {
      "type": "object",
      "properties": {
        "input_device": {
          "type": [
            "string",
            "null"
          ],
          "description": "The input device to use for data acquisition"
        },
        "input_file": {
          "type": [
            "string",
            "null"
          ],
          "description": "The input file to use for data acquisition (mutually exclusive with input_device)"
        },
        "frequency": {
          "type": "number",
          "minimum": 100,
          "maximum": 20000,
          "description": "The excitation frequency in Hz"
        },
        "bandwidth": {
          "type": "number",
          "minimum": 1,
          "maximum": 250,
          "description": "Filter bandwidth in Hz"
        },
        "window_size": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096,
          "description": "Window size for FFT analysis"
        },
        "averages": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "description": "Number of spectra to average"
        },
        "sampling_rate": {
          "type": "integer",
          "minimum": 8192,
          "maximum": 196608,
          "description": "Sampling rate in Hz"
        },
        "precision": {
          "type": "integer",
          "enum": [
            8,
            16,
            24,
            32
          ],
          "description": "Precision of sampling (bits, allowed: 8, 16, 24, 32)"
        }
      },
      "required": [
        "frequency",
        "bandwidth",
        "window_size",
        "averages"
      ],
      "oneOf": [
        {
          "required": [
            "input_device"
          ]
        },
        {
          "required": [
            "input_file"
          ]
        }
      ]
    },
    "access": {
      "type": "object",
      "description": "Access control settings for users and OAuth2 clients",
      "properties": {
        "duration": {
          "type": "integer",
          "minimum": 3600,
          "maximum": 31557600
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "user": {
                "type": "string",
                "description": "Username for authentication"
              },
              "pass": {
                "type": "string",
                "description": "Base64-encoded password hash (created with openssl passwd -5 | base64 -w0)"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "read:api",
                    "write:api",
                    "admin:api",
                    "openid",
                    "profile",
                    "email"
                  ]
                },
                "minItems": 1,
                "description": "List of permissions granted to the user"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email address of the user"
              },
              "name": {
                "type": "string",
                "description": "Full name of the user"
              }
            },
            "required": [
              "user",
              "pass",
              "permissions"
            ]
          },
          "description": "List of users with their credentials and permissions"
        },
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string",
                "description": "Unique identifier for the OAuth2 client"
              },
              "allowed_callbacks": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri",
                  "description": "Valid callback URI for this client"
                },
                "minItems": 1,
                "description": "List of allowed callback URLs for this OAuth2 client"
              },
              "default_scope": {
                "type": "string",
                "description": "Default scopes granted to this client"
              }
            },
            "required": [
              "client_id",
              "allowed_callbacks"
            ]
          },
          "description": "List of OAuth2 clients with their identifiers and allowed callback URLs"
        }
      },
      "required": [
        "users",
        "clients"
      ]
    },
    "generix": {
      "type": "object",
      "description": "OAuth2 and OpenID Connect configuration (client side)",
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "generix"
          ],
          "description": "OAuth provider type. Only 'generix' is supported"
        },
        "api_base_url": {
          "type": "string",
          "format": "uri",
          "description": "Base URL of the API server"
        },
        "authority": {
          "type": "string",
          "format": "uri",
          "description": "Authority URL for the OAuth2/OpenID Connect provider"
        },
        "client_id": {
          "type": "string",
          "description": "Client ID for OAuth2/OpenID Connect"
        },
        "scope": {
          "type": "string",
          "description": "Scopes requested by the client (space-separated)"
        },
        "redirect_uri": {
          "type": "string",
          "format": "uri",
          "description": "Redirect URI for the client after authentication"
        },
        "audience": {
          "type": "string",
          "description": "Audience in the JWT token"
        },
        "token_issuer": {
          "type": "string",
          "format": "uri",
          "description": "Token issuer base URL"
        },
        "jwks_endpoint": {
          "type": "string",
          "format": "uri",
          "description": "Endpoint for JSON Web Key Set (JWKS)"
        },
        "domain": {
          "type": "string",
          "description": "Domain for the client application"
        }
      },
      "required": [
        "provider",
        "api_base_url",
        "client_id",
        "scope",
        "redirect_uri",
        "audience",
        "token_issuer",
        "jwks_endpoint",
        "domain"
      ]
    }
  },
  "required": [
    "visualization"
  ]
}