name: Rust Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**/*.rs'
      - 'src/spectral/**'
      - 'src/visualization/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/docs.yml'
  workflow_dispatch:  # Allows manual triggering from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Install dependencies for Linux
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config libasound2-dev
        
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.86.0
            
      - name: Build documentation
        run: |
          # Build documentation with all features and include private items
          cargo doc --no-deps --all-features --document-private-items
          
          # Create an enhanced index.html with project information and styling
          cat > target/doc/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta http-equiv="refresh" content="0; url=rust_photoacoustic">
            <title>Rust Photoacoustic Documentation</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f5f7f9;
              }
              h1 { color: #2c3e50; border-bottom: 1px solid #eaecef; padding-bottom: 10px; }
              a { color: #3498db; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .container { 
                background-color: white;
                border-radius: 5px;
                padding: 20px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
              }
              .button {
                display: inline-block;
                background: #4a76b8;
                color: white;
                padding: 10px 20px;
                border-radius: 4px;
                margin-top: 15px;
                font-weight: 500;
              }
              .button:hover {
                background: #3a5a8c;
                text-decoration: none;
              }
              .modules {
                margin-top: 20px;
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 15px;
              }
              .module-card {
                border: 1px solid #eaecef;
                border-radius: 4px;
                padding: 15px;
                background-color: #f8fafc;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>Rust Photoacoustic Documentation</h1>
              <p>A comprehensive library for photoacoustic analysis of water vapor and other substances.</p>
              
              <a href="rust_photoacoustic/index.html" class="button">View Documentation</a>
              
              <h2>Main Modules</h2>
              <div class="modules">
                <div class="module-card">
                  <h3><a href="rust_photoacoustic/acquisition/index.html">Acquisition</a></h3>
                  <p>Audio signal capture from devices and files</p>
                </div>
                <div class="module-card">
                  <h3><a href="rust_photoacoustic/preprocessing/index.html">Preprocessing</a></h3>
                  <p>Signal filters and differential analysis</p>
                </div>
                <div class="module-card">
                  <h3><a href="rust_photoacoustic/spectral/index.html">Spectral</a></h3>
                  <p>FFT and frequency domain analysis</p>
                </div>
                <div class="module-card">
                  <h3><a href="rust_photoacoustic/visualization/index.html">Visualization</a></h3>
                  <p>Web server for data visualization</p>
                </div>
              </div>
            </div>
          </body>
          </html>
          EOL
          
          # Add CSS overrides for better presentation
          cat >> target/doc/rustdoc.css << 'EOL'
          .sidebar { width: 300px !important; }
          .sidebar .location { word-wrap: break-word; }
          pre.rust { font-size: 0.95em; }
          .docblock h1, .docblock h2, .docblock h3, .docblock h4 { 
            margin-top: 1.5em;
            margin-bottom: 0.5em;
            color: #2c3e50;
          }
          .docblock code {
            background-color: rgba(0,0,0,0.05);
            padding: 0.1em 0.3em;
            border-radius: 3px;
          }
          .example-wrap {
            margin: 1.2em 0;
            border-left: 4px solid #4a76b8;
          }
          EOL
          
          # Copy the documentation to the GitHub Pages directory
          mkdir -p public
          cp -r target/doc/* public/
          
          # Create a README file for the docs
          cat > public/README.md << 'EOL'
          # Rust Photoacoustic Documentation
          
          This project follows a true continuous integration approach where development happens transparently in the main branch. This allows anyone to observe the real-time evolution of a complex scientific application from early stages through completion.

          **Current Status:** This project is actively under development and not yet ready for production use. You're seeing the unfiltered development process - including experiments, refactoring, and iterative improvements.

          **What This Means:**

          - The codebase may be incomplete or contain non-working components
          - APIs and architecture may change significantly between commits
          - Tests may occasionally fail as new features are integrated
          - Documentation is being written alongside the code and evolves with it

          Rather than hiding work-in-progress behind feature branches, this approach demonstrates how modern software development progresses through incremental improvements, refactoring, and testing. Feel free to watch, star, or fork this repository to follow its evolution from prototype to working application.
                    
          ## Documentation Updates
          
          This documentation is automatically generated and published whenever changes are made to the codebase.
          
          Last updated: $(date)
          
          ## License
          
          SCTG Development Non-Commercial License (v1.0, 2025)
          EOL
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
