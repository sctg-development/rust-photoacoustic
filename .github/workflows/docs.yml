name: Rust Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**/*.rs'
      - 'src/spectral/**'
      - 'src/visualization/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/docs.yml'
  workflow_dispatch:  # Allows manual triggering from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Install dependencies for Linux
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config libasound2-dev
        
      - uses: actions/checkout@v4
        with: # fetch all submodules
          submodules: 'recursive'

      - name: Create base configuration
        run: |
          cp rust/config.example.yaml rust/config.yaml
          
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.86.0
  
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
          
      - name: Install Node.js dependencies
        run: |
          cd web
          npm install && npm run build

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "rust -> target"
          key: docs

      - name: Build documentation
        run: |
          cd rust
          # Build documentation with all features
          cargo doc --all-features --document-private-items --no-deps --package rust_photoacoustic --package oxide-auth --package oxide-auth-rocket
          
          # Create an index.html that redirects to the main crate documentation
          echo '<meta http-equiv="refresh" content="0; url=rust_photoacoustic">' > target/doc/index.html
          
          # Copy the documentation to the GitHub Pages directory
          mkdir -p ../public
          cp -r target/doc/* ../public/
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
